# Copyright (c) 2017 Genome Research Ltd.
#
# Author: Joshua C. Randall <jcrandall@alum.mit.edu>
#
# This file is part of hgi-systems.
#
# hgi-systems is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <http://www.gnu.org/licenses/>.
#
---
# file: arvados.yml

- import_playbook: hgi-preamble-playbook.yml

- hosts: arvados
  tasks:
    - name: include arvados playbook vars
      include_vars: arvados_playbook_vars.yml

    - name: check that host is on Arvados cluster network
      assert:
        that: "ansible_all_ipv4_addresses | ipaddr(item) | length == 1"
        msg: "None of the hosts IPv4 addresses {{ ansible_all_ipv4_addresses }} are on the network {{ item }}"
      with_items: "{{ arvados_cluster_internal_nets }}"
      when: "not 'image-building' in group_names"

    - name: ensure arvados host are in the dockerers group
      assert:
        that:
          - "inventory_hostname in groups['dockerers']"
        msg: "arvados hosts must also be in group dockerers"

    - name: run arvados-common role
      import_role:
        name: arvados-common
      vars:
        arvados_common_consul_template_path_file: "{{ arvados_PLAYBOOK_consul_template_path }}"

- hosts: arvados:!noconf
  tasks:
    - name: ensure arvados host is in a cluster
      assert:
        that:
          - "arvados_cluster_id is defined"
        msg: arvados host must be a member of a cluster
      when: "not 'image-building' in group_names"

# set consul-template keys for arvados clusters early
- hosts: arvados-clusters
  gather_facts: no
  tasks:
    - name: include arvados playbook vars
      include_vars: arvados_playbook_vars.yml

    - name: set consul-template keys for cluster in consul kv
      delegate_to: localhost
      tags:
        - slurm
        - munge
        - consul_kv
      consul_kv:
        key: "consul-template/arvados-cluster/{{ arvados_cluster_id }}/{{ item.key }}"
        value: "{{ item.value }}"
        state: present
        token: "{{ consul_credentials_GROUP_creds['consul-template'].token }}"
        host: "{{ arvados_cluster_GROUP_consul_template_host }}"
      with_items:
        - key: munge_key_base64
          value: "{{ arvados_cluster_munge_key_base64 }}"
        - key: slurm_conf
          value: "{{ lookup('template', 'slurm.conf.j2') }}"
        - key: cgroup_conf
          value: "{{ lookup('template', 'cgroup.conf.j2') }}"
        - key: arvados_cluster_api_host
          value: "{{ arvados_cluster_api_host }}"
        - key: arvados_keep_config_yaml
          value: "{{ lookup('template', 'arvados-keep-config.yaml.j2') }}"
        - key: arvados_keep_node_keep_config_yaml
          value: "{{ lookup('template', 'keep-node-arvados-keep-config.yaml.j2') }}"
        - key: arvados_keep_blob_signing_key
          value: "{{ arvados_cluster_GROUP_blob_signing_key }}"
        - key: arvados_keep_data_manager_api_token
          value: "{{ arvados_cluster_GROUP_data_manager_api_token }}"
        - key: arvados_keep_s3_access_key
          value: "{{ arvados_cluster_GROUP_s3_access_key }}"
        - key: arvados_keep_s3_secret_key
          value: "{{ arvados_cluster_GROUP_s3_secret_key }}"
        - key: arvados_master_consul_node
          value: "arvados-master-{{ arvados_cluster_id }}"
      when: "not 'image-building' in group_names"

- hosts: arvados-monitors
  tasks:
    - name: include arvados playbook vars
      include_vars: arvados_playbook_vars.yml

    - name: ensure arvados hosts are in the hgi-credentials group
      assert:
        that:
          - "inventory_hostname in groups['hgi-credentials']"
        msg: "arvados hosts must also be in group hgi-credentials"

    - name: configure arvados-monitor
      import_role:
        name: arvados-monitor
      vars:
        arvados_monitor_consul_template_path_file: "{{ arvados_PLAYBOOK_consul_template_path }}"
        arvados_monitor_ssl_cert: "{{ hgi_credentials_pem_wildcard_hgi_sanger_ac_uk_cert }}"
        arvados_monitor_ssl_key: "{{ hgi_credentials_pem_wildcard_hgi_sanger_ac_uk_key }}"
        arvados_monitor_server_name: "{{ cloud_resource_fqdn }}"
        arvados_monitor_cluster_id: "{{ arvados_cluster_id }}"

- hosts: arvados-ssos
  vars:
    arvados_PLAYBOOK_sso_data_mountpoint: /mnt/arvados-sso-db
    arvados_PLAYBOOK_attached_volume_device: "{{ tf_type_openstack_compute_instance_v2_GROUP_volume_device }}"
  tasks:
    - name: configure attached-openstack-volume for arvados sso database
      import_role:
        name: attached-openstack-volume
      vars:
        attached_openstack_volume_vg: arvados-sso-vg
        attached_openstack_volume_vols:
          - name: arvados-sso-data
            size: "{{ ((tf_type_openstack_compute_instance_v2_GROUP_volume_size | int) * 1024) - 4 }}M"
            fstype: xfs
            mountpoint: "{{ arvados_PLAYBOOK_sso_data_mountpoint }}"
        attached_openstack_volumes:
          - device: "{{ arvados_PLAYBOOK_attached_volume_device }}"
        attached_openstack_volume_fs_create_indicator_file: "{{ arvados_GROUP_s3_backup_restore_indicator_file }}"

    - name: setup s3 to backup sso data
      import_role:
        name: s3-backup
      vars:
        ###############################################################################
        # Variables that have no defaults and must be set
        ###############################################################################
        s3_backup_s3_bucket: "{{ arvados_GROUP_backup_s3_backup_bucket }}"
        s3_backup_s3_host: "{{ arvados_GROUP_backup_s3_host }}"
        s3_backup_s3_access_key: "{{ arvados_GROUP_backup_s3_access_key }}"
        s3_backup_s3_secret_key: "{{ arvados_GROUP_backup_s3_secret_key }}"
        s3_backup_source_dir: "{{ arvados_PLAYBOOK_sso_data_mountpoint }}"
        s3_backup_dest_path: "arvados/{{ arvados_cluster_id }}/sso"
        ###############################################################################
        # Restore from s3 if this file is present (then delete it)
        ###############################################################################
        s3_backup_restore_indicator_file: "{{ arvados_GROUP_s3_backup_restore_indicator_file }}"
        ###############################################################################
        # Settings for how often a backup is made (could be a full or incremental backup)
        ###############################################################################
        s3_backup_hour: 9,21

    - name: configure arvados-sso
      import_role:
        name: arvados-sso
      vars:
        arvados_sso_data_dir: "{{ arvados_PLAYBOOK_sso_data_mountpoint }}"

    - name: setup SSO database backup to S3
      import_role:
        name: wtsi-hgi.ansible-postgres-s3-backup
      vars:
        postgres_s3_backup_s3_url: "https://{{ arvados_GROUP_backup_s3_host }}"
        postgres_s3_backup_s3_access_key: "{{ arvados_GROUP_backup_s3_access_key }}"
        postgres_s3_backup_s3_secret_key: "{{ arvados_GROUP_backup_s3_secret_key }}"
        postgres_s3_backup_s3_bucket: "{{ arvados_GROUP_backup_s3_backup_bucket }}"
        postgres_s3_backup_s3_directory_in_bucket: "/arvados/{{ arvados_cluster_id }}/sso/db"
        # TODO: download S3 copy of minio (postgres_s3_backup_mc_download_source)
        postgres_s3_backup_run_hour: 3,15
        postgres_s3_backup_number_to_keep: 28
        postgres_s3_backup_name_suffix: -sso.sql.gz

- hosts: arvados-api-dbs:!arvados-masters
  vars:
    arvados_PLAYBOOK_api_db_data_mountpoint: /mnt/arvados-api-db
    arvados_PLAYBOOK_attached_volume_device: "{{ tf_type_openstack_compute_instance_v2_GROUP_volume_device }}"
  tasks:
    - name: include arvados playbook vars
      include_vars: arvados_playbook_vars.yml

    - name: configure attached-openstack-volume for arvados api database
      import_role:
        name: attached-openstack-volume
      vars:
        attached_openstack_volume_vg: arvados-api-db-vg
        attached_openstack_volume_vols:
          - name: arvados-api-db-data
            size: "{{ ((tf_type_openstack_compute_instance_v2_GROUP_volume_size | int) * 1024) - 4 }}M"
            fstype: xfs
            mountpoint: "{{ arvados_PLAYBOOK_api_db_data_mountpoint }}"
        attached_openstack_volumes:
          - device: "{{ arvados_PLAYBOOK_attached_volume_device }}"
        attached_openstack_volume_fs_create_indicator_file: "{{ arvados_GROUP_s3_backup_restore_indicator_file }}"

    - name: setup s3 to backup api server data
      import_role:
        name: s3-backup
      vars:
        ###############################################################################
        # Variables that have no defaults and must be set
        ###############################################################################
        s3_backup_s3_bucket: "{{ arvados_GROUP_backup_s3_backup_bucket }}"
        s3_backup_s3_host: "{{ arvados_GROUP_backup_s3_host }}"
        s3_backup_s3_access_key: "{{ arvados_GROUP_backup_s3_access_key }}"
        s3_backup_s3_secret_key: "{{ arvados_GROUP_backup_s3_secret_key }}"
        s3_backup_source_dir: "{{ arvados_PLAYBOOK_api_db_data_mountpoint }}"
        s3_backup_dest_path: "arvados/{{ arvados_cluster_id }}/api-db"
        ###############################################################################
        # Restore from s3 if this file is present (then delete it)
        ###############################################################################
        s3_backup_restore_indicator_file: "{{ arvados_GROUP_s3_backup_restore_indicator_file }}"
        ###############################################################################
        # Settings for how often a backup is made (could be a full or incremental backup)
        ###############################################################################
        s3_backup_hour: 9,21

    - name: configure arvados-api-db
      import_role:
        name: arvados-api-db
      vars:
        arvados_api_db_data_dir: "{{ arvados_PLAYBOOK_api_db_data_mountpoint }}"
        arvados_api_db_consul_template_path_file: "{{ arvados_PLAYBOOK_consul_template_path }}"
        arvados_api_db_consul_template_path: "consul-template/arvados-cluster/{{ arvados_cluster_id }}"
        arvados_api_db_data_manager_api_token: "{{ arvados_cluster_GROUP_data_manager_api_token }}"

    # - name: setup API database backup to S3
    #   import_role:
    #     name: wtsi-hgi.ansible-postgres-s3-backup
    #   vars:
    #     postgres_s3_backup_s3_url: "https://{{ arvados_GROUP_backup_s3_host }}"
    #     postgres_s3_backup_s3_access_key: "{{ arvados_GROUP_backup_s3_access_key }}"
    #     postgres_s3_backup_s3_secret_key: "{{ arvados_GROUP_backup_s3_secret_key }}"
    #     postgres_s3_backup_s3_bucket: "{{ arvados_GROUP_backup_s3_backup_bucket }}"
    #     postgres_s3_backup_s3_directory_in_bucket: "/arvados/{{ arvados_cluster_id }}/api/db"
    #     # TODO: download S3 copy of minio (postgres_s3_backup_mc_download_source)
    #     postgres_s3_backup_run_hour: 3,15
    #     postgres_s3_backup_number_to_keep: 28
    #     postgres_s3_backup_name_suffix: -api.sql.gz

- hosts: arvados-masters
  vars:
    arvados_PLAYBOOK_api_data_mountpoint: /mnt/arvados-api-db
    arvados_PLAYBOOK_attached_volume_device: "{{ tf_type_openstack_compute_instance_v2_GROUP_volume_device }}"
  tasks:
    - name: include arvados playbook vars
      include_vars: arvados_playbook_vars.yml

    - name: configure attached-openstack-volume for arvados api database
      import_role:
        name: attached-openstack-volume
      vars:
        attached_openstack_volume_vg: arvados-api-vg
        attached_openstack_volume_vols:
          - name: arvados-api-data
            size: "{{ ((tf_type_openstack_compute_instance_v2_GROUP_volume_size | int) * 1024) - 4 }}M"
            fstype: xfs
            mountpoint: "{{ arvados_PLAYBOOK_api_data_mountpoint }}"
        attached_openstack_volumes:
          - device: "{{ arvados_PLAYBOOK_attached_volume_device }}"
        attached_openstack_volume_fs_create_indicator_file: "{{ arvados_GROUP_s3_backup_restore_indicator_file }}"

    - name: setup s3 to backup api server data
      import_role:
        name: s3-backup
      vars:
        ###############################################################################
        # Variables that have no defaults and must be set
        ###############################################################################
        s3_backup_s3_bucket: "{{ arvados_GROUP_backup_s3_backup_bucket }}"
        s3_backup_s3_host: "{{ arvados_GROUP_backup_s3_host }}"
        s3_backup_s3_access_key: "{{ arvados_GROUP_backup_s3_access_key }}"
        s3_backup_s3_secret_key: "{{ arvados_GROUP_backup_s3_secret_key }}"
        s3_backup_source_dir: "{{ arvados_PLAYBOOK_api_data_mountpoint }}"
        s3_backup_dest_path: "arvados/{{ arvados_cluster_id }}/api"
        ###############################################################################
        # Restore from s3 if this file is present (then delete it)
        ###############################################################################
        s3_backup_restore_indicator_file: "{{ arvados_GROUP_s3_backup_restore_indicator_file }}"
        ###############################################################################

    - name: configure arvados-api-db on arvados-master
      import_role:
        name: arvados-api-db
      vars:
        arvados_api_db_data_dir: "{{ arvados_PLAYBOOK_api_data_mountpoint }}"
        arvados_api_db_consul_template_path_file: "{{ arvados_PLAYBOOK_consul_template_path }}"
        arvados_api_db_consul_template_path: "consul-template/arvados-cluster/{{ arvados_cluster_id }}"
        arvados_api_db_data_manager_api_token: "{{ arvados_cluster_GROUP_data_manager_api_token }}"
      when: "'arvados-api-dbs' in group_names"

    - name: configure arvados-master
      import_role:
        name: arvados-master
      vars:
        arvados_master_cert: "{{ hgi_credentials_GROUP_pem_wildcard_hgi_sanger_ac_uk_cert }}"
        arvados_master_key: "{{ hgi_credentials_GROUP_pem_wildcard_hgi_sanger_ac_uk_key }}"
        arvados_master_api_data_dir: "{{ arvados_PLAYBOOK_api_data_mountpoint }}"
        arvados_master_consul_template_path_file: "{{ arvados_PLAYBOOK_consul_template_path }}"
        arvados_master_consul_template_path: "consul-template/arvados-cluster/{{ arvados_cluster_id }}"
        arvados_master_data_manager_api_token: "{{ arvados_cluster_GROUP_data_manager_api_token }}"
        arvados_master_blob_signature_ttl_s: "{{ arvados_cluster_GROUP_blog_signature_ttl_s }}"
        arvados_master_remote_check_delegate: "{{ arvados_cluster_delegate }}"

- hosts: arvados-api-backends
  tasks:
    - name: include arvados playbook vars
      include_vars: arvados_playbook_vars.yml

    - name: ensure hosts are in the netdata group
      assert:
        that:
          - "inventory_hostname in groups['netdata']"
        msg: "host must be in the 'netdata' group"

    - name: configure arvados-api-backend
      import_role:
        name: arvados-api-backend
      vars:
        arvados_api_backend_cert: "{{ hgi_credentials_GROUP_pem_wildcard_hgi_sanger_ac_uk_cert }}"
        arvados_api_backend_key: "{{ hgi_credentials_GROUP_pem_wildcard_hgi_sanger_ac_uk_key }}"
        arvados_api_backend_consul_template_path_file: "{{ arvados_PLAYBOOK_consul_template_path }}"
        arvados_api_backend_consul_template_path: "consul-template/arvados-cluster/{{ arvados_cluster_id }}"
        arvados_api_backend_data_manager_api_token: "{{ arvados_cluster_GROUP_data_manager_api_token }}"
        arvados_api_backend_blob_signature_ttl_s: "{{ arvados_cluster_GROUP_blog_signature_ttl_s }}"
        arvados_api_backend_remote_check_delegate: "{{ arvados_cluster_delegate }}"
        arvados_api_backend_consul_config_dir: "{{ '/etc/consul.d' if (inventory_hostname in groups['consul-agents']) else docker_consul_agents_GROUP_config_dir }}"
        arvados_api_backend_consul_service_name: "{{ 'consul' if (inventory_hostname in groups['consul-agents']) else docker_consul_agents_GROUP_service_name }}"
        arvados_api_backend_master_private_ips: "{{ arvados_cluster_master_private_ips }}"
        arvados_api_backend_api_host: "{{ arvados_cluster_api_host }}"
        arvados_api_backend_apt_cache_valid_time: "{{ all_apt_cache_valid_time }}"
        arvados_api_backend_pgp_keyserver_url: "{{ pgp_keyserver_url }}"
        arvados_api_backend_cluster_id: "{{ arvados_cluster_id }}"
        # TODO: this is an awful assumption about naming and should be replaced by a check against the actual node count (the variable of which evades my knowledge at the moment)
        arvados_api_backend_trash_sweep_interval: "{{ 1800 if (inventory_hostname is match('.*-0*1')) else -1 }}"

- hosts: arvados-keeps
  tasks:
    - name: include arvados playbook vars
      include_vars: arvados_playbook_vars.yml

    - name: apply arvados-keep role
      import_role:
        name: arvados-keep
      vars:
        arvados_keep_consul_template_path_file: "{{ arvados_PLAYBOOK_consul_template_path }}"
        arvados_keep_blob_signing_key_file: "{{ arvados_PLAYBOOK_keep_blob_signing_key_file }}"
        arvados_keep_data_manager_api_token_file: "{{ arvados_PLAYBOOK_keep_data_manager_api_token_file }}"
        arvados_keep_s3_access_key_file: "{{ arvados_PLAYBOOK_keep_s3_access_key_file }}"
        arvados_keep_s3_secret_key_file: "{{ arvados_PLAYBOOK_keep_s3_secret_key_file }}"
        arvados_keep_s3_endpoint: "{{ arvados_cluster_GROUP_s3_endpoint }}"
        arvados_keep_s3_access_key: "{{ arvados_cluster_GROUP_s3_access_key }}"
        arvados_keep_s3_secret_key: "{{ arvados_cluster_GROUP_s3_secret_key }}"
        arvados_keep_s3_bucket: "{{ arvados_cluster_GROUP_s3_bucket }}"
        arvados_keep_s3_replication: "{{ arvados_cluster_GROUP_s3_replication }}"
        arvados_keep_data_manager_api_token: "{{ arvados_cluster_GROUP_data_manager_api_token }}"
        arvados_keep_blob_signing_key: "{{ arvados_cluster_GROUP_blob_signing_key }}"

- hosts: arvados-keepproxies
  tasks:
    - name: configure arvados-keepproxy
      import_role:
        name: arvados-keepproxy
      vars:
        arvados_keepproxy_backend_port: "{{ '25108' if (inventory_hostname in groups['arvados-keeps']) else '25107' }}"

- hosts: arvados-workbenches
  tasks:
    - name: configure arvados-workbench
      import_role:
        name: arvados-workbench
      vars:
        arvados_workbench_remote_check_delegate: "{{ arvados_cluster_delegate }}"

- hosts: arvados-shells
  tasks:
    - name: import arvados-shell role
      import_role:
        name: arvados-shell

    - name: setup backup of shell volume to S3
      import_role:
        name: s3-backup
      vars:
        s3_backup_s3_bucket: "{{ arvados_GROUP_backup_s3_backup_bucket }}"
        s3_backup_s3_host: "{{ arvados_GROUP_backup_s3_host }}"
        s3_backup_s3_access_key: "{{ arvados_GROUP_backup_s3_access_key }}"
        s3_backup_s3_secret_key: "{{ arvados_GROUP_backup_s3_secret_key }}"
        s3_backup_source_dir: "/home/mercury"
        s3_backup_dest_path: "arvados/{{ arvados_cluster_id }}/shell/{{ ansible_hostname }}"
        s3_backup_restore_indicator_file: "{{ arvados_GROUP_s3_backup_restore_indicator_file }}"

- hosts: arvados-compute-nodes:!noconf
  tasks:
    - name: include arvados playbook vars
      include_vars: arvados_playbook_vars.yml

    - name: apply arvados compute node role
      import_role:
        name: arvados-compute-node
      vars:
        arvados_compute_node_consul_template_path_file: "{{ arvados_PLAYBOOK_consul_template_path }}"
        arvados_compute_node_consul_template_path: "consul-template/arvados-cluster/{{ arvados_cluster_id }}"

    - name: apply arvados-keep role
      import_role:
        name: arvados-keep
      vars:
        arvados_keep_consul_template_path_file: "{{ arvados_PLAYBOOK_consul_template_path }}"
        arvados_keep_blob_signing_key_file: "{{ arvados_PLAYBOOK_keep_blob_signing_key_file }}"
        arvados_keep_data_manager_api_token_file: "{{ arvados_PLAYBOOK_keep_data_manager_api_token_file }}"
        arvados_keep_s3_access_key_file: "{{ arvados_PLAYBOOK_keep_s3_access_key_file }}"
        arvados_keep_s3_secret_key_file: "{{ arvados_PLAYBOOK_keep_s3_secret_key_file }}"

# non-host playbooks
- hosts: arvados-clusters
  gather_facts: no
  tasks:
    - name: include arvados playbook vars
      include_vars: arvados_playbook_vars.yml

    - name: configure arvados cluster as a whole
      import_role:
        name: arvados-cluster
      vars:
        arvados_cluster_consul_template_token: "{{ consul_credentials_GROUP_creds['consul-template'].token }}"
        arvados_cluster_consul_template_host: "{{ arvados_cluster_GROUP_consul_template_host }}"
        arvados_cluster_consul_template_path: "consul-template/arvados-cluster/{{ arvados_cluster_id }}"
        arvados_cluster_keep_s3_access_key_file: "{{ arvados_PLAYBOOK_keep_s3_access_key_file }}"
        arvados_cluster_keep_s3_secret_key_file: "{{ arvados_PLAYBOOK_keep_s3_secret_key_file }}"
        arvados_cluster_data_manager_api_token: "{{ arvados_cluster_GROUP_data_manager_api_token }}"
        arvados_cluster_keep_s3_endpoint: "{{ arvados_cluster_GROUP_s3_endpoint }}"
        arvados_cluster_keep_s3_access_key: "{{ arvados_cluster_GROUP_s3_access_key }}"
        arvados_cluster_keep_s3_secret_key: "{{ arvados_cluster_GROUP_s3_secret_key }}"
        arvados_cluster_keep_s3_bucket: "{{ arvados_cluster_GROUP_s3_bucket }}"
        arvados_cluster_keep_s3_replication: "{{ arvados_cluster_GROUP_s3_replication }}"
        arvados_cluster_keep_blob_signing_key: "{{ arvados_cluster_GROUP_blob_signing_key }}"
        arvados_cluster_keep_blob_signature_ttl_s: "{{ arvados_cluster_GROUP_blog_signature_ttl_s }}"
      when: arvados_cluster_exists
